From 90d2a42d45da0bd397922e744628c9753269134e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.epitre@orange.fr>
Date: Fri, 19 Oct 2018 08:02:11 +0200
Subject: [PATCH] remove other installclasses

---
 pyanaconda/installclasses/centos.py           |  61 ---------
 pyanaconda/installclasses/default.py          |  31 -----
 pyanaconda/installclasses/fedora.py           |  57 ---------
 .../installclasses/fedora_atomic_host.py      | 117 ------------------
 pyanaconda/installclasses/fedora_server.py    |  69 -----------
 .../installclasses/fedora_silverblue.py       |  31 -----
 .../installclasses/fedora_workstation.py      |  32 -----
 pyanaconda/installclasses/rhel.py             |  72 -----------
 pyanaconda/installclasses/scientific.py       |  54 --------
 9 files changed, 524 deletions(-)
 delete mode 100644 pyanaconda/installclasses/centos.py
 delete mode 100644 pyanaconda/installclasses/default.py
 delete mode 100644 pyanaconda/installclasses/fedora.py
 delete mode 100644 pyanaconda/installclasses/fedora_atomic_host.py
 delete mode 100644 pyanaconda/installclasses/fedora_server.py
 delete mode 100644 pyanaconda/installclasses/fedora_silverblue.py
 delete mode 100644 pyanaconda/installclasses/fedora_workstation.py
 delete mode 100644 pyanaconda/installclasses/rhel.py
 delete mode 100644 pyanaconda/installclasses/scientific.py

diff --git a/pyanaconda/installclasses/centos.py b/pyanaconda/installclasses/centos.py
deleted file mode 100644
index eb2e2a435..000000000
--- a/pyanaconda/installclasses/centos.py
+++ /dev/null
@@ -1,61 +0,0 @@
-#
-# centos.py
-#
-# Copyright (C) 2010  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclass import BaseInstallClass
-from pyanaconda.product import productName
-from pyanaconda import network
-from pyanaconda import nm
-
-__all__ = ["CentOSBaseInstallClass"]
-
-
-class CentOSBaseInstallClass(BaseInstallClass):
-    name = "CentOS Linux"
-    sortPriority = 10000
-    if not productName.startswith("CentOS"):          # pylint: disable=no-member
-        hidden = True
-    defaultFS = "xfs"
-
-    bootloaderTimeoutDefault = 5
-
-    ignoredPackages = ["ntfsprogs"]
-
-    installUpdates = False
-
-    _l10n_domain = "comps"
-
-    efi_dir = "centos"
-
-    help_placeholder = "CentOSPlaceholder.html"
-    help_placeholder_with_links = "CentOSPlaceholder.html"
-
-    blivet_gui_supported = False
-
-    def setNetworkOnbootDefault(self, ksdata):
-        if any(nd.onboot for nd in ksdata.network.network if nd.device):
-            return
-        # choose the device used during installation
-        # (ie for majority of cases the one having the default route)
-        dev = network.default_route_device() or network.default_route_device(family="inet6")
-        if not dev:
-            return
-        # ignore wireless (its ifcfgs would need to be handled differently)
-        if nm.nm_device_type_is_wifi(dev):
-            return
-        network.update_onboot_value(dev, True, ksdata=ksdata)
diff --git a/pyanaconda/installclasses/default.py b/pyanaconda/installclasses/default.py
deleted file mode 100644
index fb7dfa6a4..000000000
--- a/pyanaconda/installclasses/default.py
+++ /dev/null
@@ -1,31 +0,0 @@
-#
-# default.py
-#
-# Copyright (C) 2017  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-from pyanaconda.installclasses.fedora import FedoraBaseInstallClass
-
-__all__ = ["DefaultInstallClass"]
-
-
-class DefaultInstallClass(FedoraBaseInstallClass):
-    """This install class will be used by default.
-
-    In case, that anaconda cannot use any other install class,
-    this one will be used, so the installation will not fail.
-    """
-    sortPriority = 0
-    hidden = False
diff --git a/pyanaconda/installclasses/fedora.py b/pyanaconda/installclasses/fedora.py
deleted file mode 100644
index c9a80fe29..000000000
--- a/pyanaconda/installclasses/fedora.py
+++ /dev/null
@@ -1,57 +0,0 @@
-#
-# fedora.py
-#
-# Copyright (C) 2007  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclass import BaseInstallClass
-from pyanaconda.product import productName
-from pyanaconda import network
-from pyanaconda import nm
-
-__all__ = ["FedoraBaseInstallClass"]
-
-
-class FedoraBaseInstallClass(BaseInstallClass):
-    name = "Fedora"
-    sortPriority = 10000
-    if not productName.startswith("Fedora"):          # pylint: disable=no-member
-        hidden = True
-
-    _l10n_domain = "anaconda"
-
-    efi_dir = "fedora"
-
-    help_placeholder = "FedoraPlaceholder.html"
-    help_placeholder_plain_text = "FedoraPlaceholder.txt"
-    help_placeholder_with_links = "FedoraPlaceholderWithLinks.html"
-
-    default_luks_version = "luks1"
-
-    def setNetworkOnbootDefault(self, ksdata):
-        if any(nd.onboot for nd in ksdata.network.network if nd.device):
-            return
-        # choose first wired device having link
-        for dev in nm.nm_devices():
-            if nm.nm_device_type_is_wifi(dev):
-                continue
-            try:
-                link_up = nm.nm_device_carrier(dev)
-            except (nm.UnknownDeviceError, nm.PropertyNotFoundError):
-                continue
-            if link_up:
-                network.update_onboot_value(dev, True, ksdata=ksdata)
-                break
diff --git a/pyanaconda/installclasses/fedora_atomic_host.py b/pyanaconda/installclasses/fedora_atomic_host.py
deleted file mode 100644
index 81c3032d0..000000000
--- a/pyanaconda/installclasses/fedora_atomic_host.py
+++ /dev/null
@@ -1,117 +0,0 @@
-#
-# Fedora Atomic Host install class defaults
-#
-# Copyright (C) 2014  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-import os
-import shutil
-from pyanaconda.installclasses.fedora import FedoraBaseInstallClass
-from pyanaconda.installclasses.fedora_server import FedoraServerInstallClass
-from pyanaconda.product import productVariant
-from pyanaconda.core import util
-
-import logging
-log = logging.getLogger("anaconda")
-
-__all__ = ['AtomicHostInstallClass']
-
-
-class AtomicHostInstallClass(FedoraBaseInstallClass):
-    name = "Atomic Host"
-    stylesheet = "/usr/share/anaconda/pixmaps/atomic/fedora-atomic.css"
-    sortPriority = FedoraBaseInstallClass.sortPriority + 1
-    defaultFS = "xfs"
-
-    if productVariant != "AtomicHost":
-        hidden = True
-
-    def __init__(self):
-        self.localemap = {}  # loaded lazily
-        super().__init__()
-
-    def setDefaultPartitioning(self, storage):
-        FedoraServerInstallClass.createDefaultPartitioning(storage)
-
-    def filterSupportedLangs(self, ksdata, langs):
-        self._initialize_localemap(ksdata.ostreesetup.ref,
-                                   ksdata.ostreesetup.url)
-        for lang in langs:
-            if lang in self.localemap:
-                yield lang
-
-    def filterSupportedLocales(self, ksdata, lang, locales):
-        self._initialize_localemap(ksdata.ostreesetup.ref,
-                                   ksdata.ostreesetup.url)
-        supported = []
-        if lang in self.localemap:
-            for locale in locales:
-                stripped = self._strip_codeset_and_modifier(locale)
-                if stripped in self.localemap[lang]:
-                    supported.append(locale)
-        return supported
-
-    def _initialize_localemap(self, ref, repo):
-
-        if self.localemap:
-            return
-
-        # fallback to just en_US in case of errors
-        self.localemap = {"en": ["en_US"]}
-
-        # Let's only handle local embedded repos for now. Anyway, it'd probably
-        # not be very common to only override ostreesetup through kickstart and
-        # still want the interactive installer. Though to be nice, let's handle
-        # that case.
-        if not repo.startswith("file://"):
-            log.info("ostree repo is not local; defaulting to en_US")
-            return
-
-        # convert to regular UNIX path
-        repo = repo[len("file://"):]
-
-        util.mkdirChain(os.path.join(repo, "tmp/usr/lib"))
-        rc = util.execWithRedirect("/usr/bin/ostree",
-                                   ["checkout", "--repo", repo, ref,
-                                    "--subpath", "/usr/lib/locale/locale-archive",
-                                    "%s/tmp/usr/lib/locale" % repo])
-        if rc != 0:
-            log.error("failed to check out locale-archive; check program.log")
-            return
-
-        for line in util.execReadlines("/usr/bin/localedef",
-                                       ["--prefix", os.path.join(repo, "tmp"),
-                                        "--list-archive"]):
-            line = self._strip_codeset_and_modifier(line)
-            if '_' in line:
-                (lang, _territory) = line.split('_', 1)
-            else:
-                lang = line
-            if lang not in self.localemap:
-                self.localemap[lang] = [line]
-            else:
-                self.localemap[lang].append(line)
-
-        # nuke the checkout for good measure
-        shutil.rmtree(os.path.join(repo, "tmp/usr"))
-
-    @staticmethod
-    def _strip_codeset_and_modifier(locale):
-        if '@' in locale:
-            locale = locale[:locale.find('@')]
-        if '.' in locale:
-            locale = locale[:locale.find('.')]
-        return locale
diff --git a/pyanaconda/installclasses/fedora_server.py b/pyanaconda/installclasses/fedora_server.py
deleted file mode 100644
index a406988fe..000000000
--- a/pyanaconda/installclasses/fedora_server.py
+++ /dev/null
@@ -1,69 +0,0 @@
-#
-# Copyright (C) Stephen Gallagher
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclasses.fedora import FedoraBaseInstallClass
-from pyanaconda.product import productVariant
-from pyanaconda.kickstart import getAvailableDiskSpace
-from pyanaconda.storage.partspec import PartSpec
-from pyanaconda.storage.autopart import swap_suggestion
-from pyanaconda.platform import platform
-from blivet.size import Size
-
-__all__ = ["FedoraServerInstallClass"]
-
-
-class FedoraServerInstallClass(FedoraBaseInstallClass):
-    name = "Fedora Server"
-    stylesheet = "/usr/share/anaconda/pixmaps/server/fedora-server.css"
-    defaultFS = "xfs"
-    sortPriority = FedoraBaseInstallClass.sortPriority + 1
-    defaultPackageEnvironment = "server-product-environment"
-
-    if productVariant != "Server":
-        hidden = True
-
-    def setDefaultPartitioning(self, storage):
-        self.createDefaultPartitioning(storage)
-
-    @staticmethod
-    def createDefaultPartitioning(storage):
-        autorequests = [PartSpec(mountpoint="/", fstype=storage.default_fstype,
-                                 size=Size("2GiB"),
-                                 max_size=Size("15GiB"),
-                                 grow=True,
-                                 # Allow one to pass in any of following for root partition
-                                 # `autopart --type [partition|plain|btrfs|lvm|thinp] [--encrypted]`
-                                 btr=True, lv=True, thin=True, encrypted=True)]
-
-        bootreqs = platform.set_default_partitioning()
-        if bootreqs:
-            autorequests.extend(bootreqs)
-
-
-        disk_space = getAvailableDiskSpace(storage)
-        swp = swap_suggestion(disk_space=disk_space)
-        autorequests.append(PartSpec(fstype="swap", size=swp, grow=False,
-                                     lv=True, encrypted=True))
-
-        for autoreq in autorequests:
-            if autoreq.fstype is None:
-                if autoreq.mountpoint == "/boot":
-                    autoreq.fstype = storage.default_boot_fstype
-                else:
-                    autoreq.fstype = storage.default_fstype
-
-        storage.autopart_requests = autorequests
diff --git a/pyanaconda/installclasses/fedora_silverblue.py b/pyanaconda/installclasses/fedora_silverblue.py
deleted file mode 100644
index 563d3fa34..000000000
--- a/pyanaconda/installclasses/fedora_silverblue.py
+++ /dev/null
@@ -1,31 +0,0 @@
-#
-# Copyright (C) 2017  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclasses.fedora import FedoraBaseInstallClass
-from pyanaconda.product import productVariant
-
-__all__ = ["FedoraSilverblueInstallClass"]
-
-
-class FedoraSilverblueInstallClass(FedoraBaseInstallClass):
-    name = "Fedora Silverblue"
-    stylesheet = "/usr/share/anaconda/pixmaps/workstation/fedora-workstation.css"
-    sortPriority = FedoraBaseInstallClass.sortPriority + 1
-    defaultPackageEnvironment = "workstation-product-environment"
-
-    if productVariant != "Silverblue":
-        hidden = True
diff --git a/pyanaconda/installclasses/fedora_workstation.py b/pyanaconda/installclasses/fedora_workstation.py
deleted file mode 100644
index 79b6b88a0..000000000
--- a/pyanaconda/installclasses/fedora_workstation.py
+++ /dev/null
@@ -1,32 +0,0 @@
-#
-# Copyright (C) 2017  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclasses.fedora import FedoraBaseInstallClass
-from pyanaconda.product import productVariant
-
-__all__ = ["FedoraWorkstationInstallClass"]
-
-
-class FedoraWorkstationInstallClass(FedoraBaseInstallClass):
-    name = "Fedora Workstation"
-    stylesheet = "/usr/share/anaconda/pixmaps/workstation/fedora-workstation.css"
-    sortPriority = FedoraBaseInstallClass.sortPriority + 1
-    defaultPackageEnvironment = "workstation-product-environment"
-    bootloader_menu_autohide = True
-
-    if productVariant != "Workstation":
-        hidden = True
diff --git a/pyanaconda/installclasses/rhel.py b/pyanaconda/installclasses/rhel.py
deleted file mode 100644
index 40de99f41..000000000
--- a/pyanaconda/installclasses/rhel.py
+++ /dev/null
@@ -1,72 +0,0 @@
-#
-# rhel.py
-#
-# Copyright (C) 2010  Red Hat, Inc.  All rights reserved.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclass import BaseInstallClass
-from pyanaconda.product import productName
-from pyanaconda import network
-from pyanaconda import nm
-
-__all__ = ["RHELBaseInstallClass"]
-
-
-class RHELBaseInstallClass(BaseInstallClass):
-    name = "Red Hat Enterprise Linux"
-    sortPriority = 10000
-    if not productName.startswith("Red Hat "):          # pylint: disable=no-member
-        hidden = True
-
-    defaultFS = "xfs"
-    default_luks_version = "luks2"
-
-    bootloaderTimeoutDefault = 5
-
-    ignoredPackages = ["ntfsprogs"]
-
-    installUpdates = False
-
-    _l10n_domain = "comps"
-
-    efi_dir = "redhat"
-
-    help_placeholder = "rhel_help_placeholder.xml"
-    help_placeholder_with_links = "rhel_help_placeholder.xml"
-    help_placeholder_plain_text = "rhel_help_placeholder.txt"
-
-    eula_path="/usr/share/redhat-release/EULA"
-
-    mirrors_available = False
-
-    blivet_gui_supported = False
-
-    detect_unsupported_hardware = True
-
-    detect_support_removed = True
-
-    def setNetworkOnbootDefault(self, ksdata):
-        if any(nd.onboot for nd in ksdata.network.network if nd.device):
-            return
-        # choose the device used during installation
-        # (ie for majority of cases the one having the default route)
-        dev = network.default_route_device() or network.default_route_device(family="inet6")
-        if not dev:
-            return
-        # ignore wireless (its ifcfgs would need to be handled differently)
-        if nm.nm_device_type_is_wifi(dev):
-            return
-        network.update_onboot_value(dev, True, ksdata=ksdata)
diff --git a/pyanaconda/installclasses/scientific.py b/pyanaconda/installclasses/scientific.py
deleted file mode 100644
index 152e8efe2..000000000
--- a/pyanaconda/installclasses/scientific.py
+++ /dev/null
@@ -1,54 +0,0 @@
-#
-# scientific.py
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from pyanaconda.installclasses.rhel import RHELBaseInstallClass
-from pyanaconda.kickstart import RepoData
-from pyanaconda.product import productName, productVersion, productArch
-from pyanaconda.payload import PackagePayload
-
-__all__ = ["ScientificBaseInstallClass"]
-
-
-class ScientificBaseInstallClass(RHELBaseInstallClass):
-    '''
-        Scientific Linux is a Free RHEL rebuild.
-        In general it should install mostly like RHEL.
-
-        These few items are different between them.
-    '''
-    name = "Scientific Linux"
-
-    hidden = not productName.startswith("Scientific")  # pylint: disable=no-member
-
-    installUpdates = True
-
-    help_placeholder = "SLPlaceholder.html"
-    help_placeholder_with_links = "SLPlaceholder.html"
-
-    def configurePayload(self, payload):  # pylint: disable=line-too-long
-        '''
-            Load SL specific payload repos
-        '''
-        if isinstance(payload, PackagePayload):
-            major_version = productVersion.replace('rolling','').split('.')[0]
-
-            # A number of users like EPEL, seed it disabled
-            payload.addDisabledRepo(RepoData(name='epel', metalink="https://mirrors.fedoraproject.org/metalink?repo=epel-"+major_version+"&arch="+productArch))
-            # ELRepo provides handy hardware drivers, seed it disabled
-            payload.addDisabledRepo(RepoData(name='elrepo', mirrorlist="http://mirrors.elrepo.org/mirrors-elrepo.el"+major_version))
-
-        super().configurePayload(payload)
-- 
2.17.2


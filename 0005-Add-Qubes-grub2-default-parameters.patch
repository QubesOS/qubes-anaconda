From ed61678a8de9d0f18a84e3fc86fb07668b9cdf61 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.pierret@qubes-os.org>
Date: Sun, 15 Dec 2019 12:11:43 +0100
Subject: [PATCH] Add Qubes grub2 default parameters

--
This will solve #959 for new installations.

Related to qubesos/qubes-issues#959
--

--
Linux kernel have some memory overhead depending on maxmem. Dom0 isn't meant to use that much memory (most should be assigned to AppVMs), so on big systems this will be pure waste.

QubesOS/qubes-issues#1136
Fixes QubesOS/qubes-issues#1313
--

--
Try to update microcode as early as possible if provided.
This option will scan all multiboot modules besides dom0 kernel. In our
case this is perfect - there is only one other module and it is
initramfs which have microcode early cpio prepended.

QubesOS/qubes-issues#3703
--

--
Defaults set during package installation do not apply, as booloader
configuration doesn't exist at that stage yet.

Reported by @rustybird
QubesOS/qubes-issues#4252
--

--
It tries to mount every existing block device, including VM images.
--

Based on :
- 0f7cc3192020f420331dcf23c108fe18184f6479
- 40c79679b5d098250a093204110ed01cadc3c8a0
- 5bd0830c4ecdcae57f253202188e0bf22bcd2328
- 223e0ad2234b6fcaaaa4b0da665e68d5ec812cfa
- 724b128fb3f0f86abafdbf012df46336896517f0
- 203e8d7748da97cbbd53cd47d19a6a199f1952fa
- a6bfe430380becd27059617d44b197064274778e
---
 pyanaconda/modules/storage/bootloader/grub2.py | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/pyanaconda/modules/storage/bootloader/grub2.py b/pyanaconda/modules/storage/bootloader/grub2.py
index 3360c48883..5790b203b6 100644
--- a/pyanaconda/modules/storage/bootloader/grub2.py
+++ b/pyanaconda/modules/storage/bootloader/grub2.py
@@ -272,6 +272,8 @@ class GRUB2(BootLoader):
         defaults.write("GRUB_CMDLINE_LINUX=\"%s\"\n" % self.boot_args)
         defaults.write("GRUB_DISABLE_RECOVERY=\"true\"\n")
         defaults.write("GRUB_THEME=\"/boot/grub2/themes/qubes/theme.txt\"\n")
+        defaults.write("GRUB_CMDLINE_XEN_DEFAULT=\"console=none dom0_mem=min:1024M dom0_mem=max:4096M ucode=scan smt=off gnttab_max_frames=2048 gnttab_max_maptrack_frames=4096\"\n")
+        defaults.write("GRUB_DISABLE_OS_PROBER=\"true\"\n")
 
         if self.use_bls and os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
             log.warning("BLS support disabled due new-kernel-pkg being present")
-- 
2.31.1

